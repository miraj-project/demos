(doc symbol)
(doc ns)
(doc cond)
(name :foo)
(doc with-loading-context)
(doc require)
(doc interleave)
(doc alias)
(doc require)
(doc load)
(doc require)
(doc refer)
(doc create-ns)
(doc nspublics)
(doc ns-publics)
(doc use)
(doc refer)
(doc replace)
(doc var-get)
(doc var)
(doc find-var)
(doc alias)
(doc create-ns)
(doc alias)
(doc ns-aliases)
(doc symbol)
(doc intern)
(name :foo)
(doc ns-name)
(doc ffirst)
(doc in-ns)
(doc intern)
(doc remove-ns)
(doc remove)
(doc intern)
(doc load)
(doc require)
(doc find-ns)
(doc find-var)
(doc assoc)
(doc merge)
(doc get)
(doc get-in)
(doc if-let)
(doc seq)
(seq [1 2])
*ns*
(def foo)
(var foo)
(namespace (var foo))
(doc ns-name)
(ns-name (var foo))
(meta (var foo))
(:ns (meta (var foo)))
(.. (var foo) -ns)
(.. (var foo) -ns -name)
(name (.. (var foo) -ns))
(str (.. (var foo) -ns))
(doc intern)
(doc alter-var-root!)
(doc alter-var-root)
(doc alter-meta!)
(doc alter-var-root)
(doc ns-unmap)
(doc nnext)
(doc ns-unmap)
(doc remove)
(doc sort)
(doc all-ns)
(doc namespace)
*ns*
(type *ns*)
(name *ns*)
(meta *ns*)
(str *ns*)
(doc all-ns)
